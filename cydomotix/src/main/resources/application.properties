spring.application.name=CyDomotiX

spring.devtools.livereload.enabled=true

# Port du serveur Tomcat
server.port=8080

# Mettre le timeout d'une session à 60minutes et configurer les sessions comme persistentes après redémarrage du serveur
server.servlet.session.timeout=60m
server.servlet.session.persistent=true
server.servlet.session.cookie.name=JSESSIONID

# Permet d'afficher uniquement les logs de niveau ERROR dans la console (pour ne pas être pollué d'autres informations dans la console des 3rd partys)
logging.level.root=ERROR

# Pour la partie développement/code, mettre en INFO pour avoir le détail
logging.level.com.example.cydomotix=INFO

# Donne dans la console l'URL jdbc de la base H2 qui change à chaque démarrage de l'app
logging.level.org.springframework.boot.autoconfigure.h2=INFO

# Pour voir le port utilisé par Tomcat au démarrage de l'appli dans la console :
logging.level.org.springframework.boot.web.embedded.tomcat=INFO

# Activer les logs de DEBUG pour Spring Security
logging.level.org.springframework.security=DEBUG

# Configurer le comportement de Hibernate (fournisseur JPA de Spring Boot)
# On ne veut pas qu'Hibernate auto-génère le schema sql pour les entités définies, on veut le contrôler avec un fichier schema.sql
spring.jpa.hibernate.ddl-auto=none

# IMPORTANT : Hibernate(Spring Data JPA) force les noms des tables et attributs côté Java avec des minuscules, des underscores au lieu des points et snake-case au lieu du camel-case
# Utiliser cette propriété pour éviter des conflits de nommage entre côté Hibernate et côté H2 Database
# En plus d'utiliser DATABASE_TO_UPPER=false côté H2 pour que des deux côtés les noms soient respectés tels que décrits dans le code
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

### H2-DATABASE PROPRIETES ###

# Permet d'avoir une console disponible pour H2
spring.h2.console.enabled=true

# Adresse de base pour se connecter à la H2-DB
spring.h2.console.path=/h2-console

# Adresse de la JDBC fixe + credentials fixes
# IMPORTANT : DATABASE_TO_UPPER=false
# car H2 met automatiquement les noms en majuscule mais Spring Data JPA les mets automatiquement en minuscule
# donc quoiqu'il arrive ça fait des Table not found même si on les nomme correctement dans schema.sql et dans les entités java
spring.datasource.url=jdbc:h2:mem:testdb;DATABASE_TO_UPPER=false

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

### PAGE ERREUR ###

# Désactiver la page d'erreur par défaut
server.error.whitelabel.enabled=false

# Mapper /error à une page customisée
server.error.path=/error

## POUR LES TESTS COTE DEVELOPPEMENT ##

# CHANGER CETTE LIGNE EN spring.profiles.active=prod POUR DEPLOIEMENT
# Activer le Dev Mode : utiliser un profil de lancement dev quand on lance l'application (utilisé pour exécuter certaines parties du code pour des tests)
spring.profiles.active=dev

### POUR L'UPLOAD D'IMAGES ###

# Lien vers le répertoire des photos de profil
file.upload-dir=/static/img/profilePictures

# Taille maximale des fichiers envoyés autorisée
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.mail.host=smtp.mailtrap.io
spring.mail.port=587
spring.mail.username=c899237b6a784c
spring.mail.password=ab2248b339caec
spring.mail.protocol=smtp
spring.mail.debug=true